import bpy
bpy.context.scene.renderman_settings.renderexec = 'renderdl'
bpy.context.scene.renderman_settings.shaderexec = 'shaderdl'
bpy.context.scene.renderman_settings.textureexec = 'tdlmake'
bpy.context.scene.renderman_settings.shadersource = 'sl'
bpy.context.scene.renderman_settings.shaderbinary = 'sdl'
bpy.context.scene.renderman_settings.shaderinfo = 'shaderinfo'
bpy.context.scene.renderman_settings.textureext = 'tx'
bpy.context.scene.renderman_settings.displaydrvpath = '$DELIGHT/displays'
bpy.context.scene.renderman_settings.drv_identifier = ''
bpy.context.scene.renderman_settings.deepdisplay = 'dsm'
bpy.context.scene.renderman_settings.defaultshadow = 'shadowmap'
bpy.context.scene.renderman_settings.default_hider = 'hidden'
bpy.context.scene.renderman_settings.obj_attributes_export = False
bpy.context.scene.renderman_settings.mappings.point_shadowpref = ''
bpy.context.scene.renderman_settings.mappings.shadowmap = 'shadowname'
bpy.context.scene.renderman_settings.mappings.pointshader = 'pointlight'
bpy.context.scene.renderman_settings.mappings.shadowpointshader = ''
bpy.context.scene.renderman_settings.mappings.spotshader = 'spotlight'
bpy.context.scene.renderman_settings.mappings.shadowspotshader = 'spotlight'
bpy.context.scene.renderman_settings.mappings.distantshader = 'distantlight'
bpy.context.scene.renderman_settings.mappings.shadowdistantshader = ''
if not "licensing" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "licensing"
if not "holdlicense" in bpy.context.scene.renderman_settings.option_groups["licensing"].options:
	bpy.context.scene.renderman_settings.option_groups["licensing"].options.add().name = "holdlicense"
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].texture = False
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["holdlicense"].int_three[2] = 0
if not "waitforlicense" in bpy.context.scene.renderman_settings.option_groups["licensing"].options:
	bpy.context.scene.renderman_settings.option_groups["licensing"].options.add().name = "waitforlicense"
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].texture = False
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["licensing"].options["waitforlicense"].int_three[2] = 0
if not "limits" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "limits"
if not "bucketsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "bucketsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].vector_size = 2
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[2] = 0
if not "eyesplits" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "eyesplits"
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[2] = 0
if not "gridsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "gridsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[2] = 0
if not "othreshold" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "othreshold"
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].parametertype = "color"
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_three[2] = 0
if not "texturememory" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "texturememory"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[2] = 0
if not "texturesample" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "texturesample"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturesample"].int_three[2] = 0
if not "volumegroupsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "volumegroupsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["volumegroupsize"].int_three[2] = 0
if not "zthreshold" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "zthreshold"
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].parametertype = "color"
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_three[2] = 0
if not "messages" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "messages"
if not "filter" in bpy.context.scene.renderman_settings.option_groups["messages"].options:
	bpy.context.scene.renderman_settings.option_groups["messages"].options.add().name = "filter"
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].texture = False
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["filter"].int_three[2] = 0
if not "mindispbound" in bpy.context.scene.renderman_settings.option_groups["messages"].options:
	bpy.context.scene.renderman_settings.option_groups["messages"].options.add().name = "mindispbound"
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].texture = False
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["messages"].options["mindispbound"].int_three[2] = 0
if not "netcache" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "netcache"
if not "cachedir" in bpy.context.scene.renderman_settings.option_groups["netcache"].options:
	bpy.context.scene.renderman_settings.option_groups["netcache"].options.add().name = "cachedir"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].texture = False
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachedir"].int_three[2] = 0
if not "cachesize" in bpy.context.scene.renderman_settings.option_groups["netcache"].options:
	bpy.context.scene.renderman_settings.option_groups["netcache"].options.add().name = "cachesize"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].texture = False
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["cachesize"].int_three[2] = 0
if not "excludepaths" in bpy.context.scene.renderman_settings.option_groups["netcache"].options:
	bpy.context.scene.renderman_settings.option_groups["netcache"].options.add().name = "excludepaths"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].texture = False
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["excludepaths"].int_three[2] = 0
if not "includepaths" in bpy.context.scene.renderman_settings.option_groups["netcache"].options:
	bpy.context.scene.renderman_settings.option_groups["netcache"].options.add().name = "includepaths"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].texture = False
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["includepaths"].int_three[2] = 0
if not "writecache" in bpy.context.scene.renderman_settings.option_groups["netcache"].options:
	bpy.context.scene.renderman_settings.option_groups["netcache"].options.add().name = "writecache"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].texture = False
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["netcache"].options["writecache"].int_three[2] = 0
if not "render" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "render"
if not "bucketorder" in bpy.context.scene.renderman_settings.option_groups["render"].options:
	bpy.context.scene.renderman_settings.option_groups["render"].options.add().name = "bucketorder"
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].texture = False
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_three[2] = 0
if not "nthreads" in bpy.context.scene.renderman_settings.option_groups["render"].options:
	bpy.context.scene.renderman_settings.option_groups["render"].options.add().name = "nthreads"
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].texture = False
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["nthreads"].int_three[2] = 0
if not "standardatmosphere" in bpy.context.scene.renderman_settings.option_groups["render"].options:
	bpy.context.scene.renderman_settings.option_groups["render"].options.add().name = "standardatmosphere"
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].texture = False
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["standardatmosphere"].int_three[2] = 0
if not "volumeshadingrate" in bpy.context.scene.renderman_settings.option_groups["render"].options:
	bpy.context.scene.renderman_settings.option_groups["render"].options.add().name = "volumeshadingrate"
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].texture = False
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["volumeshadingrate"].int_three[2] = 0
if not "searchpath" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "searchpath"
if not "shader" in bpy.context.scene.renderman_settings.option_groups["searchpath"].options:
	bpy.context.scene.renderman_settings.option_groups["searchpath"].options.add().name = "shader"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].texture = False
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].textparameter = "/home/frigge/3delight-9.0.0/Linux-x86_64/shaders:"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[2] = 0
if not "texture" in bpy.context.scene.renderman_settings.option_groups["searchpath"].options:
	bpy.context.scene.renderman_settings.option_groups["searchpath"].options.add().name = "texture"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].texture = False
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].textparameter = "/tmp/Scene/textures:/tmp/Scene/shadowmaps:/tmp/Scene/envmaps"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[2] = 0
if not "shadow" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "shadow"
if not "bias" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "bias"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_three[2] = 0
if not "bias0" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "bias0"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_three[2] = 0
if not "bias1" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "bias1"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_three[2] = 0
if not "sample" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "sample"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["sample"].int_three[2] = 0
if not "shutter" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "shutter"
if not "efficiency" in bpy.context.scene.renderman_settings.option_groups["shutter"].options:
	bpy.context.scene.renderman_settings.option_groups["shutter"].options.add().name = "efficiency"
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].vector_size = 2
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].texture = False
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["efficiency"].int_three[2] = 0
if not "offset" in bpy.context.scene.renderman_settings.option_groups["shutter"].options:
	bpy.context.scene.renderman_settings.option_groups["shutter"].options.add().name = "offset"
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].texture = False
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shutter"].options["offset"].int_three[2] = 0
if not "statistics" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "statistics"
if not "endofframe" in bpy.context.scene.renderman_settings.option_groups["statistics"].options:
	bpy.context.scene.renderman_settings.option_groups["statistics"].options.add().name = "endofframe"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].texture = False
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_three[2] = 0
if not "filename" in bpy.context.scene.renderman_settings.option_groups["statistics"].options:
	bpy.context.scene.renderman_settings.option_groups["statistics"].options.add().name = "filename"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].texture = False
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filename"].int_three[2] = 0
if not "progress" in bpy.context.scene.renderman_settings.option_groups["statistics"].options:
	bpy.context.scene.renderman_settings.option_groups["statistics"].options.add().name = "progress"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].texture = False
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["progress"].int_three[2] = 0
if not "trace" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "trace"
if not "approximation" in bpy.context.scene.renderman_settings.option_groups["trace"].options:
	bpy.context.scene.renderman_settings.option_groups["trace"].options.add().name = "approximation"
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].texture = False
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["approximation"].int_three[2] = 0
if not "maxdepth" in bpy.context.scene.renderman_settings.option_groups["trace"].options:
	bpy.context.scene.renderman_settings.option_groups["trace"].options.add().name = "maxdepth"
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].texture = False
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_three[2] = 0
if not "specularthreshold" in bpy.context.scene.renderman_settings.option_groups["trace"].options:
	bpy.context.scene.renderman_settings.option_groups["trace"].options.add().name = "specularthreshold"
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].texture = False
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["specularthreshold"].int_three[2] = 0
if not "bound" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "bound"
if not "displacements" in bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes.add().name = "displacements"
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["bound"].attributes["displacements"].int_three[2] = 0
if not "cull" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "cull"
if not "backfacing" in bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes.add().name = "backfacing"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_three[2] = 0
if not "hidden" in bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes.add().name = "hidden"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_three[2] = 0
if not "derrivatives" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "derrivatives"
if not "centered" in bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes.add().name = "centered"
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["centered"].int_three[2] = 0
if not "forcesecond" in bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes.add().name = "forcesecond"
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["forcesecond"].int_three[2] = 0
if not "smooth" in bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes.add().name = "smooth"
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["derrivatives"].attributes["smooth"].int_three[2] = 0
if not "dice" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "dice"
if not "hair" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "hair"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hair"].int_three[2] = 0
if not "hairumin" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "hairumin"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["hairumin"].int_three[2] = 0
if not "rasterorient" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "rasterorient"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_three[2] = 0
if not "referencecamera" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "referencecamera"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["referencecamera"].int_three[2] = 0
if not "displacement" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "displacement"
if not "concatenate" in bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes.add().name = "concatenate"
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["concatenate"].int_three[2] = 0
if not "detail" in bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes.add().name = "detail"
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacement"].attributes["detail"].int_three[2] = 0
if not "displacements" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "displacements"
if not "coordinatesystem" in bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes.add().name = "coordinatesystem"
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["coordinatesystem"].int_three[2] = 0
if not "sphere" in bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes.add().name = "sphere"
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacements"].attributes["sphere"].int_three[2] = 0
if not "grouping" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "grouping"
if not "membership" in bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes.add().name = "membership"
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["membership"].int_three[2] = 0
if not "tracesubset" in bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes.add().name = "tracesubset"
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["grouping"].attributes["tracesubset"].int_three[2] = 0
if not "hider" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "hider"
if not "composite" in bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes.add().name = "composite"
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["hider"].attributes["composite"].int_three[2] = 0
if not "irradiance" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "irradiance"
if not "maxerror" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "maxerror"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_three[2] = 0
if not "nsamples" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "nsamples"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["nsamples"].int_three[2] = 0
if not "shadingrate" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "shadingrate"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["shadingrate"].int_three[2] = 0
if not "light" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "light"
if not "samples" in bpy.context.scene.renderman_settings.attribute_groups["light"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["light"].attributes.add().name = "samples"
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samples"].int_three[2] = 0
if not "samplingstrategy" in bpy.context.scene.renderman_settings.attribute_groups["light"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["light"].attributes.add().name = "samplingstrategy"
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["samplingstrategy"].int_three[2] = 0
if not "shadows" in bpy.context.scene.renderman_settings.attribute_groups["light"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["light"].attributes.add().name = "shadows"
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["light"].attributes["shadows"].int_three[2] = 0
if not "limits" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "limits"
if not "eyesplits" in bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes.add().name = "eyesplits"
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["limits"].attributes["eyesplits"].int_three[2] = 0
if not "photon" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "photon"
if not "causticmap" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "causticmap"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_three[2] = 0
if not "estimator" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "estimator"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_three[2] = 0
if not "globalmap" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "globalmap"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_three[2] = 0
if not "reflectance" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "reflectance"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].parametertype = "color"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["reflectance"].int_three[2] = 0
if not "shadingmodel" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "shadingmodel"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_three[2] = 0
if not "procedural" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "procedural"
if not "reentrant" in bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes.add().name = "reentrant"
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["procedural"].attributes["reentrant"].int_three[2] = 0
if not "shade" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "shade"
if not "camerahitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "camerahitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_three[2] = 0
if not "diffusehitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "diffusehitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_three[2] = 0
if not "photonhitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "photonhitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["photonhitmode"].int_three[2] = 0
if not "specularhitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "specularhitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_three[2] = 0
if not "transmissionhitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "transmissionhitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_three[2] = 0
if not "sides" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "sides"
if not "backfacetolerant" in bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes.add().name = "backfacetolerant"
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["backfacetolerant"].int_three[2] = 0
if not "doubleshaded" in bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes.add().name = "doubleshaded"
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["sides"].attributes["doubleshaded"].int_three[2] = 0
if not "subsurface" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "subsurface"
if not "absorption" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "absorption"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].parametertype = "color"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["absorption"].int_three[2] = 0
if not "meanfreepath" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "meanfreepath"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].parametertype = "color"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["meanfreepath"].int_three[2] = 0
if not "referencecamera" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "referencecamera"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["referencecamera"].int_three[2] = 0
if not "reflectance" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "reflectance"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].parametertype = "color"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["reflectance"].int_three[2] = 0
if not "refractionindex" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "refractionindex"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["refractionindex"].int_three[2] = 0
if not "scale" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "scale"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scale"].int_three[2] = 0
if not "scattering" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "scattering"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].parametertype = "color"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["scattering"].int_three[2] = 0
if not "shadingrate" in bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes.add().name = "shadingrate"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["subsurface"].attributes["shadingrate"].int_three[2] = 0
if not "trace" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "trace"
if not "bias" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "bias"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_three[2] = 0
if not "displacements" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "displacements"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_three[2] = 0
if not "samplemotion" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "samplemotion"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["samplemotion"].int_three[2] = 0
if not "trimcurve" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "trimcurve"
if not "sense" in bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes.add().name = "sense"
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_three[2] = 0
if not "visibility" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "visibility"
if not "camera" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "camera"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_three[2] = 0
if not "diffuse" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "diffuse"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_three[2] = 0
if not "photon" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "photon"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_three[2] = 0
if not "specular" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "specular"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_three[2] = 0
if not "subsurface" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "subsurface"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["subsurface"].int_three[2] = 0
if not "trace" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "trace"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["trace"].int_three[2] = 0
if not "transmission" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "transmission"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_three[2] = 0
if not "$DELIGHT/shaders" in bpy.context.scene.renderman_settings.pathcollection.shaderpaths:
	bpy.context.scene.renderman_settings.pathcollection.shaderpaths.add().name = "$DELIGHT/shaders"
if not "hidden" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "hidden"
if not "depthfilter" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "depthfilter"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].parametertype = "string"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[2] = 0
if not "extrememotiondof" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "extrememotiondof"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["extrememotiondof"].int_three[2] = 0
if not "jitter" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "jitter"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[2] = 0
if not "maxvdepth" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "maxvdepth"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["maxvdepth"].int_three[2] = 0
if not "midpointratio" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "midpointratio"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].parametertype = "float"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["midpointratio"].int_three[2] = 0
if not "samplemotion" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "samplemotion"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_three[2] = 0
if not "photon" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "photon"
if not "emit" in bpy.context.scene.renderman_settings.hider_list["photon"].options:
	bpy.context.scene.renderman_settings.hider_list["photon"].options.add().name = "emit"
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].texture = False
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_three[2] = 0
if not "writemaps" in bpy.context.scene.renderman_settings.hider_list["photon"].options:
	bpy.context.scene.renderman_settings.hider_list["photon"].options.add().name = "writemaps"
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].texture = False
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["writemaps"].int_three[2] = 0
if not "raytrace" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "raytrace"
if not "jitter" in bpy.context.scene.renderman_settings.hider_list["raytrace"].options:
	bpy.context.scene.renderman_settings.hider_list["raytrace"].options.add().name = "jitter"
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].texture = False
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["jitter"].int_three[2] = 0
