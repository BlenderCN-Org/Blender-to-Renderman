import bpy
bpy.context.scene.renderman_settings.renderexec = 'aqsis'
bpy.context.scene.renderman_settings.shaderexec = 'aqsl'
bpy.context.scene.renderman_settings.textureexec = 'teqser'
bpy.context.scene.renderman_settings.shadersource = 'sl'
bpy.context.scene.renderman_settings.shaderbinary = 'slx'
bpy.context.scene.renderman_settings.shaderinfo = 'aqsltell'
bpy.context.scene.renderman_settings.textureext = 'tx'
bpy.context.scene.renderman_settings.displaydrvpath = '//../../../../../usr/lib/aqsis'
bpy.context.scene.renderman_settings.drv_identifier = '_dspy'
bpy.context.scene.renderman_settings.deepdisplay = ''
bpy.context.scene.renderman_settings.defaultshadow = 'shadow'
bpy.context.scene.renderman_settings.default_hider = ''
bpy.context.scene.renderman_settings.obj_attributes_export = False
bpy.context.scene.renderman_settings.mappings.point_shadowpref = 'sf'
bpy.context.scene.renderman_settings.mappings.shadowmap = 'shadowname'
bpy.context.scene.renderman_settings.mappings.pointshader = 'pointlight'
bpy.context.scene.renderman_settings.mappings.shadowpointshader = 'shadowpoint'
bpy.context.scene.renderman_settings.mappings.spotshader = 'spotlight'
bpy.context.scene.renderman_settings.mappings.shadowspotshader = 'shadowspot'
bpy.context.scene.renderman_settings.mappings.distantshader = 'distantlight'
bpy.context.scene.renderman_settings.mappings.shadowdistantshader = 'shadowdistant'
if not "limits" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "limits"
if not "bucketmodulo" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "bucketmodulo"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketmodulo"].int_three[2] = 0
if not "bucketsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "bucketsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].vector_size = 2
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[2] = 0
if not "eyesplits" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "eyesplits"
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[2] = 0
if not "gridsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "gridsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[2] = 0
if not "texturememory" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "texturememory"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[2] = 0
if not "zthreshold" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "zthreshold"
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].parametertype = "color"
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["zthreshold"].int_three[2] = 0
if not "render" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "render"
if not "bucketorder" in bpy.context.scene.renderman_settings.option_groups["render"].options:
	bpy.context.scene.renderman_settings.option_groups["render"].options.add().name = "bucketorder"
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].texture = False
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["bucketorder"].int_three[2] = 0
if not "multipass" in bpy.context.scene.renderman_settings.option_groups["render"].options:
	bpy.context.scene.renderman_settings.option_groups["render"].options.add().name = "multipass"
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].texture = False
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["render"].options["multipass"].int_three[2] = 0
if not "searchpath" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "searchpath"
if not "shader" in bpy.context.scene.renderman_settings.option_groups["searchpath"].options:
	bpy.context.scene.renderman_settings.option_groups["searchpath"].options.add().name = "shader"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].texture = False
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].textparameter = "/usr/share/aqsis/shaders:"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[2] = 0
if not "texture" in bpy.context.scene.renderman_settings.option_groups["searchpath"].options:
	bpy.context.scene.renderman_settings.option_groups["searchpath"].options.add().name = "texture"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].texture = False
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].textparameter = "/tmp/Scene/textures:/tmp/Scene/shadowmaps:/tmp/Scene/envmaps"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[2] = 0
if not "shadow" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "shadow"
if not "bias" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "bias"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias"].int_three[2] = 0
if not "bias0" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "bias0"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias0"].int_three[2] = 0
if not "bias1" in bpy.context.scene.renderman_settings.option_groups["shadow"].options:
	bpy.context.scene.renderman_settings.option_groups["shadow"].options.add().name = "bias1"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].parametertype = "float"
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].texture = False
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["shadow"].options["bias1"].int_three[2] = 0
if not "aqsis" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "aqsis"
if not "expandgrids" in bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes.add().name = "expandgrids"
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["aqsis"].attributes["expandgrids"].int_three[2] = 0
if not "autoshadow" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "autoshadow"
if not "res" in bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes.add().name = "res"
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["res"].int_three[2] = 0
if not "shadowmapname" in bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes.add().name = "shadowmapname"
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["autoshadow"].attributes["shadowmapname"].int_three[2] = 0
if not "dice" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "dice"
if not "binary" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "binary"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_three[2] = 0
if not "trimcurve" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "trimcurve"
if not "sense" in bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes.add().name = "sense"
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trimcurve"].attributes["sense"].int_three[2] = 0
if not "/usr/share/aqsis/shaders" in bpy.context.scene.renderman_settings.shaders.shaderpaths:
	bpy.context.scene.renderman_settings.shaders.shaderpaths.add().name = "/usr/share/aqsis/shaders"
if not "hidden" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "hidden"
if not "depthfilter" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "depthfilter"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].parametertype = "string"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[2] = 0
if not "jitter" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "jitter"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[2] = 0
