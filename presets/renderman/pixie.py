import bpy
bpy.context.scene.renderman_settings.renderexec = 'rndr'
bpy.context.scene.renderman_settings.shaderexec = 'sdrc'
bpy.context.scene.renderman_settings.textureexec = 'texmake'
bpy.context.scene.renderman_settings.shadersource = 'sl'
bpy.context.scene.renderman_settings.shaderbinary = 'sdr'
bpy.context.scene.renderman_settings.shaderinfo = 'sdrinfo'
bpy.context.scene.renderman_settings.textureext = 'tx'
bpy.context.scene.renderman_settings.displaydrvpath = '$PIXIEHOME/displays'
bpy.context.scene.renderman_settings.drv_identifier = ''
bpy.context.scene.renderman_settings.deepdisplay = 'tsm'
bpy.context.scene.renderman_settings.defaultshadow = 'shadow'
bpy.context.scene.renderman_settings.default_hider = 'hidden'
bpy.context.scene.renderman_settings.obj_attributes_export = True
bpy.context.scene.renderman_settings.mappings.point_shadowpref = 'shadowname_'
bpy.context.scene.renderman_settings.mappings.shadowmap = 'shadowname'
bpy.context.scene.renderman_settings.mappings.pointshader = 'pointlight'
bpy.context.scene.renderman_settings.mappings.shadowpointshader = 'shadowpoint'
bpy.context.scene.renderman_settings.mappings.spotshader = 'spotlight'
bpy.context.scene.renderman_settings.mappings.shadowspotshader = 'shadowspot'
bpy.context.scene.renderman_settings.mappings.distantshader = 'distantlight'
bpy.context.scene.renderman_settings.mappings.shadowdistantshader = 'shadowdistant'
if not "limits" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "limits"
if not "brickmemory" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "brickmemory"
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].int_one[0] = 10000
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["brickmemory"].int_three[2] = 0
if not "bucketsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "bucketsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].vector_size = 2
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["bucketsize"].int_three[2] = 0
if not "eyesplits" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "eyesplits"
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["eyesplits"].int_three[2] = 0
if not "geocachememory" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "geocachememory"
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].int_one[0] = 31457280
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["geocachememory"].int_three[2] = 0
if not "gridsize" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "gridsize"
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["gridsize"].int_three[2] = 0
if not "inheritattributes" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "inheritattributes"
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["inheritattributes"].int_three[2] = 0
if not "metabuckets" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "metabuckets"
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].vector_size = 2
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].int_two[0] = 5
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].int_two[1] = 5
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["metabuckets"].int_three[2] = 0
if not "numthreads" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "numthreads"
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].int_one[0] = 4
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["numthreads"].int_three[2] = 0
if not "othreshold" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "othreshold"
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].parametertype = "color"
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].colorparameter[0] = 0.995999991894
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].colorparameter[1] = 0.995999991894
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].colorparameter[2] = 0.995999991894
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["othreshold"].int_three[2] = 0
if not "texturememory" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "texturememory"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["texturememory"].int_three[2] = 0
if not "threadstride" in bpy.context.scene.renderman_settings.option_groups["limits"].options:
	bpy.context.scene.renderman_settings.option_groups["limits"].options.add().name = "threadstride"
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].texture = False
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].int_one[0] = 3
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["limits"].options["threadstride"].int_three[2] = 0
if not "searchpath" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "searchpath"
if not "shader" in bpy.context.scene.renderman_settings.option_groups["searchpath"].options:
	bpy.context.scene.renderman_settings.option_groups["searchpath"].options.add().name = "shader"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].texture = False
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].textparameter = "/home/frigge/PixieRenderman/shaders:"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["shader"].int_three[2] = 0
if not "texture" in bpy.context.scene.renderman_settings.option_groups["searchpath"].options:
	bpy.context.scene.renderman_settings.option_groups["searchpath"].options.add().name = "texture"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].texture = False
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].textparameter = "/tmp/Scene/textures:/tmp/Scene/shadowmaps:/tmp/Scene/envmaps"
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["searchpath"].options["texture"].int_three[2] = 0
if not "statistics" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "statistics"
if not "endofframe" in bpy.context.scene.renderman_settings.option_groups["statistics"].options:
	bpy.context.scene.renderman_settings.option_groups["statistics"].options.add().name = "endofframe"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].texture = False
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["endofframe"].int_three[2] = 0
if not "filelog" in bpy.context.scene.renderman_settings.option_groups["statistics"].options:
	bpy.context.scene.renderman_settings.option_groups["statistics"].options.add().name = "filelog"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].parametertype = "string"
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].texture = False
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].int_one[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["statistics"].options["filelog"].int_three[2] = 0
if not "trace" in bpy.context.scene.renderman_settings.option_groups:
	bpy.context.scene.renderman_settings.option_groups.add().name = "trace"
if not "maxdepth" in bpy.context.scene.renderman_settings.option_groups["trace"].options:
	bpy.context.scene.renderman_settings.option_groups["trace"].options.add().name = "maxdepth"
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].parametertype = "int"
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].vector_size = 1
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].texture = False
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].textparameter = ""
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_one[0] = 5
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_two[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_two[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_three[0] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_three[1] = 0
bpy.context.scene.renderman_settings.option_groups["trace"].options["maxdepth"].int_three[2] = 0
if not "cull" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "cull"
if not "backfacing" in bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes.add().name = "backfacing"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["backfacing"].int_three[2] = 0
if not "hidden" in bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes.add().name = "hidden"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["cull"].attributes["hidden"].int_three[2] = 0
if not "dice" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "dice"
if not "binary" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "binary"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["binary"].int_three[2] = 0
if not "boundexpand" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "boundexpand"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].float_one[0] = 0.5
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["boundexpand"].int_three[2] = 0
if not "minsplits" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "minsplits"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].int_one[0] = 2
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["minsplits"].int_three[2] = 0
if not "numprobes" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "numprobes"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].vector_size = 2
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].int_two[0] = 3
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].int_two[1] = 3
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["numprobes"].int_three[2] = 0
if not "rasterorient" in bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes.add().name = "rasterorient"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["dice"].attributes["rasterorient"].int_three[2] = 0
if not "displacementbound" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "displacementbound"
if not "coordinatesystem" in bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes.add().name = "coordinatesystem"
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].textparameter = "current"
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["coordinatesystem"].int_three[2] = 0
if not "sphere" in bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes.add().name = "sphere"
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["displacementbound"].attributes["sphere"].int_three[2] = 0
if not "irradiance" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "irradiance"
if not "filemode" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "filemode"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["filemode"].int_three[2] = 0
if not "handle" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "handle"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["handle"].int_three[2] = 0
if not "maxerror" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "maxerror"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_one[0] = 0.5
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxerror"].int_three[2] = 0
if not "maxpixeldist" in bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes.add().name = "maxpixeldist"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].float_one[0] = 20.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["irradiance"].attributes["maxpixeldist"].int_three[2] = 0
if not "photon" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "photon"
if not "causticmap" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "causticmap"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["causticmap"].int_three[2] = 0
if not "estimator" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "estimator"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_one[0] = 100
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["estimator"].int_three[2] = 0
if not "globalmap" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "globalmap"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["globalmap"].int_three[2] = 0
if not "ior" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "ior"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].float_one[0] = 1.5
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["ior"].int_three[2] = 0
if not "iorrange" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "iorrange"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].vector_size = 2
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].float_two[0] = 1.5
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].float_two[1] = 1.39999997616
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["iorrange"].int_three[2] = 0
if not "shadingmodel" in bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes.add().name = "shadingmodel"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].textparameter = "matte"
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["photon"].attributes["shadingmodel"].int_three[2] = 0
if not "shade" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "shade"
if not "camerahitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "camerahitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].textparameter = "shader"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["camerahitmode"].int_three[2] = 0
if not "diffusehitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "diffusehitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].textparameter = "primitive"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["diffusehitmode"].int_three[2] = 0
if not "specularhitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "specularhitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].textparameter = "shader"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["specularhitmode"].int_three[2] = 0
if not "transmissionhitmode" in bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes.add().name = "transmissionhitmode"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].parametertype = "string"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].textparameter = "primitive"
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["shade"].attributes["transmissionhitmode"].int_three[2] = 0
if not "trace" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "trace"
if not "bias" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "bias"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].parametertype = "float"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_one[0] = 0.00999999977648
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["bias"].int_three[2] = 0
if not "displacements" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "displacements"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["displacements"].int_three[2] = 0
if not "maxdiffusedepth" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "maxdiffusedepth"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].int_one[0] = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxdiffusedepth"].int_three[2] = 0
if not "maxspeculardepth" in bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes.add().name = "maxspeculardepth"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].int_one[0] = 2
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["trace"].attributes["maxspeculardepth"].int_three[2] = 0
if not "visibility" in bpy.context.scene.renderman_settings.attribute_groups:
	bpy.context.scene.renderman_settings.attribute_groups.add().name = "visibility"
if not "camera" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "camera"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_one[0] = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["camera"].int_three[2] = 0
if not "diffuse" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "diffuse"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["diffuse"].int_three[2] = 0
if not "photon" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "photon"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["photon"].int_three[2] = 0
if not "specular" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "specular"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["specular"].int_three[2] = 0
if not "transmission" in bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes:
	bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes.add().name = "transmission"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].parametertype = "int"
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].vector_size = 1
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].texture = False
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].textparameter = ""
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_one[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_two[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_two[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_three[0] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_three[1] = 0
bpy.context.scene.renderman_settings.attribute_groups["visibility"].attributes["transmission"].int_three[2] = 0
if not "$PIXIEHOME/shaders" in bpy.context.scene.renderman_settings.pathcollection.shaderpaths:
	bpy.context.scene.renderman_settings.pathcollection.shaderpaths.add().name = "$PIXIEHOME/shaders"
if not "hidden" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "hidden"
if not "depthfilter" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "depthfilter"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].parametertype = "string"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].textparameter = "midpoint"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["depthfilter"].int_three[2] = 0
if not "jitter" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "jitter"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].parametertype = "float"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["jitter"].int_three[2] = 0
if not "samplemotion" in bpy.context.scene.renderman_settings.hider_list["hidden"].options:
	bpy.context.scene.renderman_settings.hider_list["hidden"].options.add().name = "samplemotion"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].texture = False
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["hidden"].options["samplemotion"].int_three[2] = 0
if not "photon" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "photon"
if not "emit" in bpy.context.scene.renderman_settings.hider_list["photon"].options:
	bpy.context.scene.renderman_settings.hider_list["photon"].options.add().name = "emit"
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].texture = False
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["emit"].int_three[2] = 0
if not "samplespectrum" in bpy.context.scene.renderman_settings.hider_list["photon"].options:
	bpy.context.scene.renderman_settings.hider_list["photon"].options.add().name = "samplespectrum"
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].texture = False
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["photon"].options["samplespectrum"].int_three[2] = 0
if not "raytrace" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "raytrace"
if not "falsecolor" in bpy.context.scene.renderman_settings.hider_list["raytrace"].options:
	bpy.context.scene.renderman_settings.hider_list["raytrace"].options.add().name = "falsecolor"
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].texture = False
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["falsecolor"].int_three[2] = 0
if not "samplemotion" in bpy.context.scene.renderman_settings.hider_list["raytrace"].options:
	bpy.context.scene.renderman_settings.hider_list["raytrace"].options.add().name = "samplemotion"
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].parametertype = "int"
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].texture = False
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].textparameter = ""
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["raytrace"].options["samplemotion"].int_three[2] = 0
if not "zbuffer" in bpy.context.scene.renderman_settings.hider_list:
	bpy.context.scene.renderman_settings.hider_list.add().name = "zbuffer"
if not "depthfilter" in bpy.context.scene.renderman_settings.hider_list["zbuffer"].options:
	bpy.context.scene.renderman_settings.hider_list["zbuffer"].options.add().name = "depthfilter"
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].parametertype = "string"
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].vector_size = 1
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].texture = False
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].textparameter = "midpoint"
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].colorparameter[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].colorparameter[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].colorparameter[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].float_one[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].float_two[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].float_two[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].float_three[0] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].float_three[1] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].float_three[2] = 0.0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].int_one[0] = 0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].int_two[0] = 0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].int_two[1] = 0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].int_three[0] = 0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].int_three[1] = 0
bpy.context.scene.renderman_settings.hider_list["zbuffer"].options["depthfilter"].int_three[2] = 0
